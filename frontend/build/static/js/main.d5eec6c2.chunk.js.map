{"version":3,"sources":["components/products/search/SubmitInputField.tsx","components/products/search/Search.tsx","components/products/search/SearchProductItem.tsx","components/products/search/SearchProducts.tsx","App.tsx","index.tsx"],"names":["SubmitInputField","type","name","placeholder","value","buttonValue","onChange","onSubmit","Search","searchProducts","useState","text","setText","e","currentTarget","preventDefault","SearchProductItem","product","description","_id","SearchProducts","products","map","App","setProducts","a","axios","get","res","data","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAqCeA,EAzBqC,SAAC,GAQ9C,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,KACAC,EAKI,EALJA,YACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,8BACE,uBAAMA,SAAUA,EAAhB,UACE,uBACEN,KAAMA,EACNC,KAAMA,EACNC,YAAaA,EACbC,MAAOA,EACPE,SAAUA,IAEZ,uBAAOL,KAAK,SAASG,MAAOC,UCIrBG,EA3BiB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EAC9BC,mBAAS,IADqB,mBAC/CC,EAD+C,KACzCC,EADyC,KAYtD,OACE,mCACE,cAAC,EAAD,CACEX,KAAK,OACLC,KAAK,SACLC,YAAY,qBACZC,MAAOO,EACPN,YAAY,SACZC,SAjBgB,SAACO,GAAD,OACpBD,EAAQC,EAAEC,cAAcV,QAiBpBG,SAfgB,SAACM,GACrBA,EAAEE,iBACFN,EAAeE,GACfC,EAAQ,UCCGI,EAXuC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvD,OACE,gCACE,uCAAUA,EAAQf,QAClB,8CAAiBe,EAAQC,eACzB,qCAAQD,EAAQE,OAChB,sDCYSC,EAhBiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjD,OACE,8BACE,6BACGA,EAASC,KAAI,SAACL,GACb,OACE,6BACE,cAAC,EAAD,CAAmBA,QAASA,KADrBA,EAAQE,aCadI,EAnBH,WAAO,IAAD,EACgBb,mBAAS,IADzB,mBACTW,EADS,KACCG,EADD,KAGVf,EAAc,uCAAG,WAAOE,GAAP,eAAAc,EAAA,sEACHC,IAAMC,IAAN,UANV,wBAMU,6CAC2BhB,IAFxB,OACfiB,EADe,OAIrBJ,EAAYI,EAAIC,KAAKA,MAJA,2CAAH,sDAOpB,OACE,sBAAKC,UAAU,MAAf,UACE,2DACA,cAAC,EAAD,CAAQrB,eAAgBA,IACxB,cAAC,EAAD,CAAgBY,SAAUA,QCnBhCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d5eec6c2.chunk.js","sourcesContent":["import { FC, FormEvent, ChangeEvent } from 'react';\r\n\r\ninterface SubmitInputFieldProps {\r\n  type: string;\r\n  name: string;\r\n  placeholder: string;\r\n  value: string;\r\n  buttonValue: string;\r\n  onChange(e: ChangeEvent<HTMLInputElement>): void;\r\n  onSubmit(e: FormEvent<HTMLFormElement>): void;\r\n}\r\n\r\nconst SubmitInputField: FC<SubmitInputFieldProps> = ({\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  buttonValue,\r\n  onChange,\r\n  onSubmit,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        ></input>\r\n        <input type=\"submit\" value={buttonValue}></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitInputField;\r\n","import { useState, FormEvent, ChangeEvent, FC } from 'react';\r\n// Components\r\nimport SubmitInputField from './SubmitInputField';\r\n\r\ninterface SearchProps {\r\n  searchProducts(text: string): Promise<void>;\r\n}\r\n\r\nconst Search: FC<SearchProps> = ({ searchProducts }) => {\r\n  const [text, setText] = useState(``);\r\n\r\n  const changeHandler = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setText(e.currentTarget.value);\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    searchProducts(text);\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SubmitInputField\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Search products...\"\r\n        value={text}\r\n        buttonValue=\"Search\"\r\n        onChange={changeHandler}\r\n        onSubmit={submitHandler}\r\n      ></SubmitInputField>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { FC } from 'react';\r\nimport { ProductSummary } from '../ProductItem';\r\n\r\ninterface SearchProductItemProps {\r\n  product: ProductSummary;\r\n}\r\n\r\nconst SearchProductItem: FC<SearchProductItemProps> = ({ product }) => {\r\n  return (\r\n    <div>\r\n      <p>Name: {product.name}</p>\r\n      <p>Description: {product.description}</p>\r\n      <p>ID: {product._id}</p>\r\n      <button>View Product</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchProductItem;\r\n","import { FC } from 'react';\r\n// Components\r\nimport { ProductSummary } from '../ProductItem';\r\nimport SearchProductItem from './SearchProductItem';\r\n\r\ninterface SearchProductsProps {\r\n  products: ProductSummary[];\r\n}\r\n\r\nconst SearchProducts: FC<SearchProductsProps> = ({ products }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {products.map((product: ProductSummary) => {\r\n          return (\r\n            <li key={product._id}>\r\n              <SearchProductItem product={product} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchProducts;\r\n","import { useState } from 'react';\nimport axios from 'axios';\n\n// Components\nimport Search from './components/products/search/Search';\nimport SearchProducts from './components/products/search/SearchProducts';\n\nconst URL = 'http://localhost:5000';\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n\n  const searchProducts = async (text: string) => {\n    const res = await axios.get(\n      `${URL}/api/v1/products/find/search?term=${text}`\n    );\n    setProducts(res.data.data);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Just trying out stuff lol</h1>\n      <Search searchProducts={searchProducts} />\n      <SearchProducts products={products} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}